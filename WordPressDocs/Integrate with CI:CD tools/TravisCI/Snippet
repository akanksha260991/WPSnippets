<snippets>
<code lang="ruby" name="code">
username = ENV['BROWSERSTACK_USERNAME']
access_key = ENV['BROWSERSTACK_ACCESS_KEY']

desired_caps = {
  'device': 'Samsung Galaxy S8',
    'app': ENV['BROWSERSTACK_APP_ID'],
    'build': 'MyBuild',
}

appium_driver = Appium::Driver.new({
  'caps' => desired_caps,
  'appium_lib' => {
    :server_url => "http://#{username}:#{access_key}@hub-cloud.browserstack.com/wd/hub"
  }}, true)
</code>
<code lang="ruby" name="capability">
desired_caps = {
  'browserstack.local': 'true',
    'browserstack.localIdentifier': ENV['BROWSERSTACK_LOCAL_IDENTIFIER'],
}
</code>



<code lang="java" name="code">
String username = System.getenv("BROWSERSTACK_USERNAME");
String accessKey = System.getenv("BROWSERSTACK_ACCESS_KEY");


public static void main(String args[]) throws MalformedURLException, InterruptedException {
    DesiredCapabilities caps = new DesiredCapabilities();
    caps.setCapability("device", "Samsung Galaxy S8");
    caps.setCapability("app", System.getenv("BROWSERSTACK_APP_ID");
    caps.setCapability("build", "MyBuild");
}

driver = new AndroidDriver<AndroidElement>(new URL("https://"+userName+":"+accessKey+"@hub-cloud.browserstack.com/wd/hub"), caps);
</code>
<code lang="java" name="capability">
DesiredCapabilities caps = new DesiredCapabilities();
caps.setCapability("browserstack.local", "true");
caps.setCapability("browserstack.localIdentifier", System.getenv("BROWSERSTACK_LOCAL_IDENTIFIER");
</code>


<code lang="python" name="code">
username = os.getenv("BROWSERSTACK_USERNAME")
access_key = os.getenv("BROWSERSTACK_ACCESS_KEY")
app = 

desired_cap = {
 'device': 'Samsung Galaxy S8',
 'app': os.getenv("BROWSERSTACK_APP_ID"),
 'build': 'MyBuild'
}

driver = webdriver.Remote("http://" + userName + ":" + accessKey + "@hub-cloud.browserstack.com/wd/hub", desired_cap)
</code>
<code lang="python" name="capability">
desired_cap = {
 'browserstack.local': 'true',
 'browserstack.localIdentifier': os.getenv("BROWSERBROWSERSTACK_LOCAL_IDENTIFIER")
}
</code>



<code lang="nodejs" name="code">
username = process.env.BROWSERSTACK_USERNAME
accessKey = process.env.BROWSERSTACK_ACCESS_KEY

var capabilities = {
 "device" : "Samsung Galaxy S8",
 "app" : process.env.BROWSERSTACK_APP_ID,
 "build" : "MyBuild"
}

driver = wd.promiseRemote("http://hub-cloud.browserstack.com/wd/hub");
 
driver
  .init(capabilities)
  //Write your code here
  .fin(function() { return driver.quit(); })
  .done();
</code>
<code lang="nodejs" name="capability">
var capabilities = {
 "browserstack.local" : "true",
 "browserstack.localIdentifier" : process.env.BROWSERSTACK_LOCAL_IDENTIFIER
}
</code>


<code lang="c-sharp" name="code">
username = Environment.GetEnvironmentVariable("BROWSERSTACK_USERNAME");
accessKey = Environment.GetEnvironmentVariable("BROWSERSTACK_ACCESS_KEY");

DesiredCapabilities caps = new DesiredCapabilities();
caps.SetCapability("device", "Samsung Galaxy S8");
caps.SetCapability("app", Environment.GetEnvironmentVariable("BROWSERSTACK_APP_ID");
caps.SetCapability("build", "MySampleBuild");

AndroidDriver<AndroidElement> driver = new AndroidDriver<AndroidElement>(new Uri("http://hub-cloud.browserstack.com/wd/hub"), caps);
</code>
<code lang="c-sharp" name="capability">
DesiredCapabilities caps = new DesiredCapabilities();
caps.SetCapability("browserstack.local", "true");
caps.SetCapability("browserstack.localIdentifier",  Environment.GetEnvironmentVariable("BROWSERSTACK_LOCAL_IDENTIFIER"));
</code>



<code lang="php" name="code">
$username = getenv("BROWSERSTACK_USERNAME");
$accessKey = getenv("BROWSERSTACK_ACCESS_KEY");
$app = getenv("BROWSERSTACK_APP_ID");


$capabilities = new DesiredCapabilities();
$capabilities->setCapability("device", "Samsung Galaxy S8");
$capabilities->setCapability("app", $app);
$capabilities->setCapability("build", "MySampleBuild");

$driver = RemoteWebDriver::create("http://hub-cloud.browserstack.com/wd/hub", $capabilities);
</code>
<code lang="php" name="capability">
$capabilities = new DesiredCapabilities();
$capabilities->setCapability("browserstack.local", "true");
$capabilities->setCapability("browserstack.localIdentifier", getenv("BROWSERSTACK_LOCAL_IDENTIFIER"));
</code>
</snippets>
